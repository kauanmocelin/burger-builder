{"version":3,"sources":["store/actions/actionsTypes.js","shared/utility.js","hoc/Aux/Aux.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","requestInterceptor","interceptors","request","use","responseInterceptor","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","map","ingredientKey","Array","_","i","reduce","arr","el","concat","Burger","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","Layout","showSideDrawer","sideDrawerCloseHandler","sideDrawerToggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","OrderSummary","ingredientSummary","igKey","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","actions","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIngr","updatedSt","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","newOrder","authRedirectPath","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.079662f9.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT'\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL'\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\n\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAIL = 'AUTH_FAIL'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) => {\n    let isValid = true\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n    return isValid\n}","const aux = (props) => props.children\n\nexport default aux","import * as actionTypes from './actionsTypes'\nimport axios from '../../axios-orders'\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data))\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed())\n            })\n    }\n}","import * as actionTypes from './actionsTypes'\nimport axios from '../../axios-orders'\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart())\n        axios.post('/orders.json?auth=' + token, orderData)\n            .then(response => {\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error))\n            })\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart())\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\n        axios.get('/orders.json' + queryParams)\n            .then(response => {\n                const fetchedOrders = []\n                for (let key in response.data) {\n                    fetchedOrders.push({\n                        ...response.data[key],\n                        id: key\n                    })\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders))\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err))\n            })\n    }\n}","import axios from 'axios'\n\nimport * as actionTypes from './actionsTypes'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate')\n    localStorage.removeItem('userId')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart())\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBelqGr622jVCbKp_FRhXFc5CzKzGYSD9Q'\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBelqGr622jVCbKp_FRhXFc5CzKzGYSD9Q'\n        }\n        axios.post(url, authData)\n            .then(response => {\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\n                localStorage.setItem('token', response.data.idToken)\n                localStorage.setItem('expirationDate', expirationDate)\n                localStorage.setItem('userId', response.data.localId)\n                dispatch(authSuccess(response.data.idToken, response.data.localId))\n                dispatch(checkAuthTimeout(response.data.expiresIn))\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error))\n            })\n    }\n}\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if (!token) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout())\n            } else {\n                const userId = localStorage.getItem('userId')\n                dispatch(authSuccess(token, userId))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime() / 1000)))\n            }\n        }\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-eae60.firebaseio.com/'\n})\n\nexport default instance","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","import React from 'react'\n\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop","import React, { Component } from 'react'\n\nimport classes from './Modal.module.css'\nimport Aux from '../../../hoc/Aux/Aux'\nimport Backdrop from '../Backdrop/Backdrop'\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","import React from 'react'\n\nimport classes from './Button.module.css'\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n)\n\nexport default button","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","import React from 'react'\n\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n)\n\nexport default spinner","import React, { Component } from 'react'\n\nimport Modal from '../../components/UI/Modal/Modal'\nimport Aux from '../Aux/Aux'\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount() {\n            this.requestInterceptor = axios.interceptors.request.use(request => {\n                this.setState({ error: null })\n                return request\n            })\n            this.responseInterceptor = axios.interceptors.response.use(response => response, error => {\n                this.setState({ error: error })\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.requestInterceptor)\n            axios.interceptors.response.eject(this.responseInterceptor)\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({ error: null })\n        }\n\n\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux >\n            )\n        }\n    }\n}\n\nexport default withErrorHandler","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport classes from './BurgerIngredient.module.css'\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>\n                break\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                )\n                break\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>\n                break\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>\n                break\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>\n                break\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>\n                break\n            default:\n                ingredient = null\n        }\n        return ingredient\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient","import React from 'react'\n// import { withRouter } from 'react-router-dom'\n\nimport classes from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(ingredientKey => {\n            return [...Array(props.ingredients[ingredientKey])].map((_, i) => {\n                return <BurgerIngredient key={ingredientKey + i} type={ingredientKey} />\n            })\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, [])\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    )\n}\n\n// export default withRouter(burger)\nexport default burger","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","import React from 'react'\n\nimport burgerLogo from '../../assets/images/burger-logo.png'\nimport classes from './Logo.module.css'\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{ height: props.height }}>\n        <img src={burgerLogo} alt=\"myBurger\" />\n    </div>\n)\n\nexport default logo","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport classes from './NavigationItem.module.css'\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem","import React from 'react'\n\nimport classes from './NavigationItems.module.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\n        {!props.isAuthenticated\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n    </ul>\n)\n\nexport default navigationItems","import React from 'react'\n\nimport classes from './DrawerToggle.module.css'\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToggle","import React from 'react'\n\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n)\n\nexport default toolbar","import React from 'react'\n\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport classes from './SideDrawer.module.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport Aux from '../../../hoc/Aux/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close]\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Aux from '../Aux/Aux'\nimport classes from './Layout.module.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerCloseHandler = () => {\n        this.setState({ showSideDrawer: false })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerCloseHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\n\nimport classes from './BuildControl.module.css'\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button\n            className={classes.Less}\n            onClick={props.removed}\n            disabled={props.disabled}>Less</button>\n        <button\n            className={classes.More}\n            onClick={props.added}>More</button>\n    </div>\n)\nexport default buildControl","import React from 'react'\n\nimport classes from './BuildControls.module.css'\nimport BuildControl from './BuildControl/BuildControl'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n]\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(control => (\n            <BuildControl\n                key={control.label}\n                label={control.label}\n                added={() => props.ingredientAdded(control.type)}\n                removed={() => props.ingredientRemoved(control.type)}\n                disabled={props.disabled[control.type]} />\n        ))}\n        <button\n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGNUP TO ORDER'}</button>\n    </div>\n)\n\nexport default buildControls","import React, { Component } from 'react'\n\nimport Aux from '../../../hoc/Aux/Aux'\nimport Button from '../../UI/Button/Button'\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class component\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li>\n                )\n            })\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux >\n        )\n    }\n\n}\n\nexport default OrderSummary","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Aux from '../../hoc/Aux/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport * as actions from '../../store/actions/index'\nimport axios from '../../axios-orders'\n\nexport class BurgerBuilder extends Component {\n\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount() {\n        this.props.onInitIngredients()\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el\n            }, 0)\n        return sum > 0\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true })\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout')\n            this.props.history.push('/auth')\n        }\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false })\n    }\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase()\n        this.props.history.push('/checkout')\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n\n        }\n        let orderSummary = null\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} />\n                </Aux>\n            )\n            orderSummary = (<OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />)\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nimport * as actions from '../../../store/actions/index'\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.onLogout()\n    }\n\n    render() {\n        return <Redirect to=\"/\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react'\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount() {\n            importComponent()\n                .then(cmp => {\n                    this.setState({ component: cmp.default })\n                })\n        }\n\n        render() {\n            const C = this.state.component\n            return C ? <C {...this.props} /> : null\n        }\n    }\n}\n\nexport default asyncComponent","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Layout from './hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index'\nimport asyncComponent from './hoc/asyncComponent/asyncComponent'\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/Checkout/Checkout')\n})\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders')\n})\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth')\n})\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup()\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/\" component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionsTypes'\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedState)\n}\n\nconst removeIngredient = (state, action) => {\n    const updatedIngr = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngre = updateObject(state.ingredients, updatedIngr)\n    const updatedSt = {\n        ingredients: updatedIngre,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject(state, updatedSt)\n}\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    })\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, { error: true })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action)\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action)\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action)\n        default: return state\n    }\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionsTypes'\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, { purchased: false })\n}\n// Executar a mesma refatoração para todos os cases do switch\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action)\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject(state, { loading: true })\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject(action.orderData, { id: action.orderId })\n            return updateObject(state, {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            })\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject(state, { loading: false })\n        case actionTypes.FETCH_ORDERS_START:\n            return updateObject(state, { loading: true })\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state, {\n                orders: action.orders,\n                loading: false\n            })\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state, { loading: false })\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer","import * as actionTypes from '../actions/actionsTypes'\nimport { updateObject } from '../../shared/utility'\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, { error: null, loading: true })\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null })\n}\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action)\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action)\n        case actionTypes.AUTH_FAIL: return authFail(state, action)\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action)\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action)\n        default: return state\n    }\n}\n\nexport default reducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}